version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_LISTENERS: ${KAFKA_LISTENER}
      KAFKA_CREATE_TOPICS: smoke_sensor_data:1:1   # topic: partitions: replicas
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true" # 1 partition and 1 relica by default; need to set it false later
    depends_on:
      - zookeeper

  airflow:
    image: apache/airflow:2.9.1
    environment:
      AIRFLOW__CORE__EXECUTOR: ${AIRFLOW__CORE__EXECUTOR}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW__WEBSERVER__DEFAULT_USER}
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW__WEBSERVER__DEFAULT_PASSWORD}
    volumes:
      - ./airflow:/opt/airflow
    ports:
      - "8080:8080"
    command: >
      bash -c "airflow db init &&
               airflow users create --username admin --firstname admin --lastname admin --role Admin --password admin --email admin@example.com &&
               airflow webserver & airflow scheduler"
    depends_on:
      - kafka

  stream_generator:
    build:
      context: ./streaming
      dockerfile: Dockerfile
    depends_on:
      - kafka
    env_file:
      - .env
      
#  flask_api:
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    ports:
#      - "${FLASK_PORT}:${FLASK_PORT}"
#    env_file:
#      - .env
#    depends_on:
#      - kafka
#
#  prometheus:
#    image: prom/prometheus
#    ports:
#      - "${PROMETHEUS_PORT}:9090"
#    volumes:
#      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
#
#  grafana:
#    image: grafana/grafana
#    ports:
#      - "${GRAFANA_PORT}:3000"
#    volumes:
#      - ./monitoring/grafana:/var/lib/grafana
#
